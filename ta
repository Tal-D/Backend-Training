[1mdiff --git a/avro_generator/src/main/avro/ExtendedIdentification.avsc b/avro_generator/src/main/avro/ExtendedIdentification.avsc[m
[1mindex e69de29..30533db 100644[m
[1m--- a/avro_generator/src/main/avro/ExtendedIdentification.avsc[m
[1m+++ b/avro_generator/src/main/avro/ExtendedIdentification.avsc[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "type" : "record",[m
[32m+[m[32m  "namespace": "backend.training",[m
[32m+[m[32m  "name" : "ExtendedIdentification",[m
[32m+[m[32m  "doc": "Registered citizen extended identification data",[m
[32m+[m[32m  "fields": [[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "firstName",[m
[32m+[m[32m      "type": "string",[m
[32m+[m[32m      "doc": "Person first name"[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "lastName",[m
[32m+[m[32m      "type": "string",[m
[32m+[m[32m      "doc": "Person last name"[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "birthCountry",[m
[32m+[m[32m      "type": "string",[m
[32m+[m[32m      "default": "Israel",[m
[32m+[m[32m      "doc": "Person birth country"[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "age",[m
[32m+[m[32m      "type": "int",[m
[32m+[m[32m      "doc": "Person current age"[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "petName",[m
[32m+[m[32m      "type": [[m
[32m+[m[32m        "null",[m
[32m+[m[32m        "string"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "default": null,[m
[32m+[m[32m      "doc": "Person current pet name"[m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "name": "isEmployed",[m
[32m+[m[32m      "type": "boolean",[m
[32m+[m[32m      "default": false,[m
[32m+[m[32m      "doc": "Determines if the person is currently employed"[m
[32m+[m[32m    }[m
[32m+[m[32m  ][m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/kafka_consumer_api/src/main/java/Main.java b/kafka_consumer_api/src/main/java/Main.java[m
[1mindex 6470214..c64f59b 100644[m
[1m--- a/kafka_consumer_api/src/main/java/Main.java[m
[1m+++ b/kafka_consumer_api/src/main/java/Main.java[m
[36m@@ -10,11 +10,9 @@[m [mpublic class Main {[m
         KafkaAvroConsumer<Identification> kafkaAvroConsumer = new KafkaAvroConsumer<Identification>(Constants.BROKER,[m
                 Constants.SCHEMA_REGISTRY_URL);[m
 [m
[31m-        kafkaStringConsumer.subscribe_to(Constants.CONSUMED_TOPIC);[m
         kafkaStringConsumer.pollMessage(Constants.POLLING_TIMEOUT_MS);[m
         kafkaStringConsumer.closeConsumer();[m
 [m
[31m-        kafkaAvroConsumer.subscribe_to(Constants.CONSUMED_TOPIC);[m
         ConsumerRecord<String, Identification> avroMessage = kafkaAvroConsumer.pollMessage(Constants.POLLING_TIMEOUT_MS);[m
         kafkaAvroConsumer.closeConsumer();[m
     }[m
[1mdiff --git a/kafka_consumer_api/src/main/java/consumer/api/KafkaConsumer.java b/kafka_consumer_api/src/main/java/consumer/api/KafkaConsumer.java[m
[1mindex 1bbd8cc..73ec8a2 100644[m
[1m--- a/kafka_consumer_api/src/main/java/consumer/api/KafkaConsumer.java[m
[1m+++ b/kafka_consumer_api/src/main/java/consumer/api/KafkaConsumer.java[m
[36m@@ -25,6 +25,7 @@[m [mpublic class KafkaConsumer<T> {[m
     public void initializeConsumer() {[m
         initializeConsumerProperties();[m
         this.consumer = new org.apache.kafka.clients.consumer.KafkaConsumer<String, T>(this.consumerProperties);[m
[32m+[m[32m        this.subscribe_to(Constants.CONSUMED_TOPIC);[m
     }[m
 [m
     public void subscribe_to(String topicName) {[m
[1mdiff --git a/kafka_consumer_api/src/main/java/utils/AvroConverter.java b/kafka_consumer_api/src/main/java/utils/AvroConverter.java[m
[1mindex dd4ed5f..2295064 100644[m
[1m--- a/kafka_consumer_api/src/main/java/utils/AvroConverter.java[m
[1m+++ b/kafka_consumer_api/src/main/java/utils/AvroConverter.java[m
[36m@@ -1,4 +1,24 @@[m
 package utils;[m
 [m
[32m+[m[32mimport backend.training.ExtendedIdentification;[m
[32m+[m[32mimport backend.training.Identification;[m
[32m+[m[32mimport org.apache.avro.generic.GenericRecord;[m
[32m+[m[32mimport org.apache.kafka.clients.consumer.ConsumerRecord;[m
[32m+[m
 public class AvroConverter {[m
[32m+[m[32m    private AvroConverter() {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static ExtendedIdentification convertToExtendedIdentification([m
[32m+[m[32m            ConsumerRecord<String, Identification> record) {[m
[32m+[m[32m        GenericRecord genericRecord = record.value();[m
[32m+[m[32m        return ExtendedIdentification.newBuilder()[m
[32m+[m[32m                .setFirstName(genericRecord.get("firstName").toString())[m
[32m+[m[32m                .setLastName(genericRecord.get("lastName").toString())[m
[32m+[m[32m                .setBirthCountry(genericRecord.get("birthCountry").toString())[m
[32m+[m[32m                .setAge((int) genericRecord.get("age"))[m
[32m+[m[32m                .setPetName(genericRecord.get("petName").toString())[m
[32m+[m[32m                .setIsEmployed(true)[m
[32m+[m[32m                .build();[m
[32m+[m[32m    }[m
 }[m
